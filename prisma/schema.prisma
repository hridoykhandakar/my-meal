// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Todo {
  id          String   @id @default(uuid())
  title       String?
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  email       String        @unique
  role        Role          @default(MEMBER)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  marketCoast MarketCoast[]
  meals       Meal[]
}

model MarketCoast {
  id          String   @id @default(uuid())
  purchaserId Int //Foreign key who made the purchase
  purchaser   User     @relation(fields: [purchaserId], references: [id])
  date        DateTime @default(now())
  totalCoast  Float
  items       String
  createAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([purchaserId])
}

model Meal {
  id        Int      @id @default(autoincrement())
  userId    Int //Foreign key who made the purchase
  user      User     @relation(fields: [userId], references: [id])
  date      DateTime @default(now())
  count     Float
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

enum Role {
  MANAGER
  MEMBER
}
